# -*- coding: utf-8 -*-
"""chatbot.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1HBw8gD3gprwHdaYUYRFcd_4qLdFPtn9z
"""

import os
import nltk
import ssl
import streamlit as st
import random
import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import LogisticRegression

ssl._create_default_https_context=ssl._create_unverified_context
nltk.data.path.append(os.path.abspath("nltk_data"))
nltk.download('punkt')

import json

# Load JSON data using a relative path
with open('intents.json', 'r') as file:
    data = json.load(file)


# Print the loaded data to verify its structure
print(type(data))  # Should print <class 'dict'>
print(data.keys())  # Should show keys like 'intents'

# Check the structure inside 'intents'
print(type(data['intents']))  # Should print <class 'list'>
print(data['intents'][0])  # Should show the first intent with keys like 'tag', 'patterns', 'responses'

#vectorizer
vectorizer=TfidfVectorizer()
clf=LogisticRegression(random_state=0,max_iter=10000)

# Assuming 'data' is the dictionary containing the JSON data
intents = data['intents']  # Extract the list of intents

tags = []
patterns = []

# Iterate through each intent in the list
for intent in intents:
    for pattern in intent['patterns']:
        tags.append(intent['tag'])
        patterns.append(pattern)

# Print the results to verify
print("Tags:", tags)
print("Patterns:", patterns)

#train
x=vectorizer.fit_transform(patterns)
y=tags
clf.fit(x,y)

#create chatbot

def chatbot(input_text):
    input_text=vectorizer.transform([input_text])
    tag=clf.predict(input_text)[0]
    for intent in intents:
        if intent['tag']==tag:
            response=random.choice(intent['responses'])
            return response

#chat
counter=0
def main():
    global counter
    st.title("Chatbot")
    st.write("Welcome to chatbot!")
    counter+=1
    user_input=st.text_input("You:",key=f"user_input_{counter}")
    if user_input:
        response=chatbot(user_input)
        st.text_area("Chatbot:",value=response,height=100,max_chars=None,key=f"chatbot_response_{counter}")

        if response.lower() in ['goodbye','bye']:
            st.write("Thanks")
            st.stop()
if __name__=='__main__':
    main()
